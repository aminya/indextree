var searchIndex = JSON.parse('{\
"indextree":{"doc":"Arena based tree data structure","tn":["Arena","NodeError","AppendSelf","PrependSelf","InsertBeforeSelf","InsertAfterSelf","Removed","NodeId","Node","Ancestors","Children","Descendants","FollowingSiblings","NodeEdge","Start","End","PrecedingSiblings","ReverseChildren","ReverseTraverse","Traverse","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","to_string","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","from","into","into_iter","to_owned","clone_into","borrow","borrow_mut","try_from","try_into","type_id","into","into","next","next","next","next","next","next","next","next","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","default","cmp","eq","ne","eq","ne","eq","ne","eq","ne","partial_cmp","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","index","index_mut","hash","hash","new","get_node_id","new_node","count","is_empty","get","get_mut","iter","is_removed","ancestors","preceding_siblings","following_siblings","children","reverse_children","descendants","traverse","reverse_traverse","detach","append","checked_append","prepend","checked_prepend","insert_after","checked_insert_after","insert_before","checked_insert_before","remove","remove_subtree","get","get_mut","parent","first_child","last_child","previous_sibling","next_sibling","is_removed"],"q":["indextreed":["An <code>Arena</code> structure containing certain <code>Node</code>s.","Possible node failures.","Attempt to append a node to itself.","Attempt to prepend a node to itself.","Attempt to insert a node before itself.","Attempt to insert a node after itself.","Attempt to insert a removed node, or insert to a removed …","A node identifier within a particular <code>Arena</code>.","A node within a particular <code>Arena</code>.","An iterator of the IDs of the ancestors a given node.","An iterator of the IDs of the children of a given node, …","An iterator of the IDs of a given node and its …","An iterator of the IDs of the siblings after a given node.","Indicator if the node is at a start or endpoint of the …","Indicates that start of a node that has children.","Indicates that end of a node that has children.","An iterator of the IDs of the siblings before a given …","An iterator of the IDs of the children of a given node, …","An iterator of the “sides” of a node visited during a …","An iterator of the “sides” of a node visited during a …reates a new empty <code>Arena</code>.","Retrieves the <code>NodeId</code> correspoding to a <code>Node</code> in the <code>Arena</code>. …","Creates a new node from its associated data.","Counts the number of nodes in arena and returns it.","Returns <code>true</code> if arena has no nodes, <code>false</code> otherwise.","Returns a reference to the node with the given id if in …","Returns a mutable reference to the node with the given id …","Returns an iterator of all nodes in the arena in …","Return if the <code>Node</code> of NodeId point to is removed.","Returns an iterator of IDs of this node and its ancestors.","Returns an iterator of IDs of this node and the siblings …","Returns an iterator of IDs of this node and the siblings …","Returns an iterator of IDs of this node’s children.","Returns an iterator of IDs of this node’s children, in …","An iterator of the IDs of a given node and its …","An iterator of the “sides” of a node visited during a …","An iterator of the “sides” of a node visited during a …","Detaches a node from its parent and siblings. Children …","Appends a new child to this node, after existing children.","Appends a new child to this node, after existing children.","Prepends a new child to this node, before existing …","Prepends a new child to this node, before existing …","Inserts a new sibling after this node.","Inserts a new sibling after this node.","Inserts a new sibling before this node.","Inserts a new sibling before this node.","Removes a node from the arena.","Removes a node and its descendants from the arena.","Returns a reference to the node data.","Returns a mutable reference to the node data.","Returns the ID of the parent node, unless this node is …","Returns the ID of the first child of this node, unless it …","Returns the ID of the last child of this node, unless it …","Returns the ID of the previous sibling of this node, …","Returns the ID of the next sibling of this node, unless …","Checks if the node is marked as removed."],"i":[0,0,1,1,1,1,1,0,0,0,0,0,0,0,2,2,0,0,0,0,3,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,9,9,9,9,9,9,9,9,9,9,10,10,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,2,2,2,2,2,2,2,2,2,12,12,12,12,12,12,12,12,12,12,13,13,13,13,13,13,13,13,13,13,4,4,6,7,8,9,10,11,12,13,3,1,4,5,6,7,8,9,10,11,2,12,13,3,4,3,3,4,4,5,5,2,2,4,3,1,4,5,2,1,4,5,3,3,4,2,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[],["string",3]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["nonzerousize",3]],[[],["usize",15]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeedge",4],["option",4]]],[[],[["nodeedge",4],["option",4]]],[[],["arena",3]],[[],["nodeerror",4]],[[],["nodeid",3]],[[],["node",3]],[[],["ancestors",3]],[[],["precedingsiblings",3]],[[],["followingsiblings",3]],[[],["children",3]],[[],["reversechildren",3]],[[],["descendants",3]],[[],["nodeedge",4]],[[],["traverse",3]],[[],["reversetraverse",3]],[[]],[[["nodeid",3]],["ordering",4]],[[["arena",3]],["bool",15]],[[["arena",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["nodeid",3]],["bool",15]],[[["node",3]],["bool",15]],[[["node",3]],["bool",15]],[[["nodeedge",4]],["bool",15]],[[["nodeedge",4]],["bool",15]],[[["nodeid",3]],[["ordering",4],["option",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["nodeid",3]],["node",3]],[[["nodeid",3]],["node",3]],[[]],[[]],[[],["arena",3]],[[["node",3]],[["nodeid",3],["option",4]]],[[],["nodeid",3]],[[],["usize",15]],[[],["bool",15]],[[["nodeid",3]],[["node",3],["option",4]]],[[["nodeid",3]],[["option",4],["node",3]]],[[]],[[["arena",3]],["bool",15]],[[["arena",3]],["ancestors",3]],[[["arena",3]],["precedingsiblings",3]],[[["arena",3]],["followingsiblings",3]],[[["arena",3]],["children",3]],[[["arena",3]],["reversechildren",3]],[[["arena",3]],["descendants",3]],[[["arena",3]],["traverse",3]],[[["arena",3]],["reversetraverse",3]],[[["arena",3]]],[[["nodeid",3],["arena",3]]],[[["nodeid",3],["arena",3]],[["nodeerror",4],["result",4]]],[[["nodeid",3],["arena",3]]],[[["nodeid",3],["arena",3]],[["nodeerror",4],["result",4]]],[[["nodeid",3],["arena",3]]],[[["nodeid",3],["arena",3]],[["nodeerror",4],["result",4]]],[[["nodeid",3],["arena",3]]],[[["nodeid",3],["arena",3]],[["nodeerror",4],["result",4]]],[[["arena",3]]],[[["arena",3]]],[[]],[[]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],[["nodeid",3],["option",4]]],[[],["bool",15]]],"p":[[4,"NodeError"],[4,"NodeEdge"],[3,"Arena"],[3,"NodeId"],[3,"Node"],[3,"Ancestors"],[3,"PrecedingSiblings"],[3,"FollowingSiblings"],[3,"Children"],[3,"ReverseChildren"],[3,"Descendants"],[3,"Traverse"],[3,"ReverseTraverse"]]}\
}');
initSearch(searchIndex);