var searchIndex = JSON.parse('{\
"indextree":{"doc":"Arena based tree data structureThis arena tree structure…","i":[[3,"Arena","indextree","An `Arena` structure containing certain `Node`s.",null,null],[3,"NodeId","","A node identifier within a particular `Arena`.",null,null],[3,"Node","","A node within a particular `Arena`.",null,null],[3,"Ancestors","","An iterator of the IDs of the ancestors a given node.",null,null],[3,"Children","","An iterator of the IDs of the children of a given node, in…",null,null],[3,"Descendants","","An iterator of the IDs of a given node and its…",null,null],[3,"FollowingSiblings","","An iterator of the IDs of the siblings after a given node.",null,null],[3,"PrecedingSiblings","","An iterator of the IDs of the siblings before a given node.",null,null],[3,"ReverseChildren","","An iterator of the IDs of the children of a given node, in…",null,null],[3,"ReverseTraverse","","An iterator of the \\\"sides\\\" of a node visited during a…",null,null],[3,"Traverse","","An iterator of the \\\"sides\\\" of a node visited during a…",null,null],[4,"NodeError","","Possible node failures.",null,null],[13,"AppendSelf","","Attempt to append a node to itself.",0,null],[13,"PrependSelf","","Attempt to prepend a node to itself.",0,null],[13,"InsertBeforeSelf","","Attempt to insert a node before itself.",0,null],[13,"InsertAfterSelf","","Attempt to insert a node after itself.",0,null],[13,"Removed","","Attempt to insert a removed node, or insert to a removed…",0,null],[4,"NodeEdge","","Indicator if the node is at a start or endpoint of the tree",null,null],[13,"Start","","Indicates that start of a node that has children.",1,null],[13,"End","","Indicates that end of a node that has children.",1,null],[11,"new","","Creates a new empty `Arena`.",2,[[],["arena",3]]],[11,"get_node_id","","Retrieves the `NodeId` correspoding to a `Node` in the…",2,[[["node",3]],[["option",4],["nodeid",3]]]],[11,"new_node","","Creates a new node from its associated data.",2,[[],["nodeid",3]]],[11,"count","","Counts the number of nodes in arena and returns it.",2,[[]]],[11,"is_empty","","Returns `true` if arena has no nodes, `false` otherwise.",2,[[]]],[11,"get","","Returns a reference to the node with the given id if in…",2,[[["nodeid",3]],[["node",3],["option",4]]]],[11,"get_mut","","Returns a mutable reference to the node with the given id…",2,[[["nodeid",3]],[["option",4],["node",3]]]],[11,"iter","","Returns an iterator of all nodes in the arena in…",2,[[]]],[11,"is_removed","","Return if the `Node` of NodeId point to is removed.",3,[[["arena",3]]]],[11,"ancestors","","Returns an iterator of IDs of this node and its ancestors.",3,[[["arena",3]],["ancestors",3]]],[11,"preceding_siblings","","Returns an iterator of IDs of this node and the siblings…",3,[[["arena",3]],["precedingsiblings",3]]],[11,"following_siblings","","Returns an iterator of IDs of this node and the siblings…",3,[[["arena",3]],["followingsiblings",3]]],[11,"children","","Returns an iterator of IDs of this node’s children.",3,[[["arena",3]],["children",3]]],[11,"reverse_children","","Returns an iterator of IDs of this node’s children, in…",3,[[["arena",3]],["reversechildren",3]]],[11,"descendants","","An iterator of the IDs of a given node and its…",3,[[["arena",3]],["descendants",3]]],[11,"traverse","","An iterator of the \\\"sides\\\" of a node visited during a…",3,[[["arena",3]],["traverse",3]]],[11,"reverse_traverse","","An iterator of the \\\"sides\\\" of a node visited during a…",3,[[["arena",3]],["reversetraverse",3]]],[11,"detach","","Detaches a node from its parent and siblings. Children are…",3,[[["arena",3]]]],[11,"append","","Appends a new child to this node, after existing children.",3,[[["arena",3],["nodeid",3]]]],[11,"checked_append","","Appends a new child to this node, after existing children.",3,[[["arena",3],["nodeid",3]],[["result",4],["nodeerror",4]]]],[11,"prepend","","Prepends a new child to this node, before existing children.",3,[[["arena",3],["nodeid",3]]]],[11,"checked_prepend","","Prepends a new child to this node, before existing children.",3,[[["arena",3],["nodeid",3]],[["result",4],["nodeerror",4]]]],[11,"insert_after","","Inserts a new sibling after this node.",3,[[["arena",3],["nodeid",3]]]],[11,"checked_insert_after","","Inserts a new sibling after this node.",3,[[["arena",3],["nodeid",3]],[["result",4],["nodeerror",4]]]],[11,"insert_before","","Inserts a new sibling before this node.",3,[[["arena",3],["nodeid",3]]]],[11,"checked_insert_before","","Inserts a new sibling before this node.",3,[[["arena",3],["nodeid",3]],[["result",4],["nodeerror",4]]]],[11,"remove","","Removes a node from the arena.",3,[[["arena",3]]]],[11,"remove_subtree","","Removes a node and its descendants from the arena.",3,[[["arena",3]]]],[11,"get","","Returns a reference to the node data.",4,[[]]],[11,"get_mut","","Returns a mutable reference to the node data.",4,[[]]],[11,"parent","","Returns the ID of the parent node, unless this node is the…",4,[[],[["option",4],["nodeid",3]]]],[11,"first_child","","Returns the ID of the first child of this node, unless it…",4,[[],[["option",4],["nodeid",3]]]],[11,"last_child","","Returns the ID of the last child of this node, unless it…",4,[[],[["option",4],["nodeid",3]]]],[11,"previous_sibling","","Returns the ID of the previous sibling of this node,…",4,[[],[["option",4],["nodeid",3]]]],[11,"next_sibling","","Returns the ID of the next sibling of this node, unless it…",4,[[],[["option",4],["nodeid",3]]]],[11,"is_removed","","Checks if the node is marked as removed.",4,[[]]],[11,"from","","",2,[[]]],[11,"into","","",2,[[]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"into","","",3,[[]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"to_string","","",3,[[],["string",3]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"into","","",4,[[]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"to_string","","",4,[[],["string",3]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"into","","",5,[[]]],[11,"into_iter","","",5,[[]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"into","","",6,[[]]],[11,"into_iter","","",6,[[]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"into","","",7,[[]]],[11,"into_iter","","",7,[[]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"into","","",8,[[]]],[11,"into_iter","","",8,[[]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"into","","",9,[[]]],[11,"into_iter","","",9,[[]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"into","","",10,[[]]],[11,"into_iter","","",10,[[]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"into","","",11,[[]]],[11,"into_iter","","",11,[[]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"into","","",12,[[]]],[11,"into_iter","","",12,[[]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"into","","",1,[[]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"into","","",3,[[],["nonzerousize",3]]],[11,"into","","",3,[[]]],[11,"next","","",5,[[],[["option",4],["nodeid",3]]]],[11,"next","","",9,[[],[["option",4],["nodeid",3]]]],[11,"next","","",8,[[],[["option",4],["nodeid",3]]]],[11,"next","","",6,[[],[["option",4],["nodeid",3]]]],[11,"next","","",10,[[],[["option",4],["nodeid",3]]]],[11,"next","","",7,[[],[["option",4],["nodeid",3]]]],[11,"next","","",12,[[],[["option",4],["nodeedge",4]]]],[11,"next","","",11,[[],[["option",4],["nodeedge",4]]]],[11,"clone","","",2,[[],["arena",3]]],[11,"clone","","",0,[[],["nodeerror",4]]],[11,"clone","","",3,[[],["nodeid",3]]],[11,"clone","","",4,[[],["node",3]]],[11,"clone","","",5,[[],["ancestors",3]]],[11,"clone","","",9,[[],["precedingsiblings",3]]],[11,"clone","","",8,[[],["followingsiblings",3]]],[11,"clone","","",6,[[],["children",3]]],[11,"clone","","",10,[[],["reversechildren",3]]],[11,"clone","","",7,[[],["descendants",3]]],[11,"clone","","",1,[[],["nodeedge",4]]],[11,"clone","","",12,[[],["traverse",3]]],[11,"clone","","",11,[[],["reversetraverse",3]]],[11,"default","","",2,[[]]],[11,"cmp","","",3,[[["nodeid",3]],["ordering",4]]],[11,"eq","","",2,[[["arena",3]]]],[11,"ne","","",2,[[["arena",3]]]],[11,"eq","","",3,[[["nodeid",3]]]],[11,"ne","","",3,[[["nodeid",3]]]],[11,"eq","","",4,[[["node",3]]]],[11,"ne","","",4,[[["node",3]]]],[11,"eq","","",1,[[["nodeedge",4]]]],[11,"ne","","",1,[[["nodeedge",4]]]],[11,"partial_cmp","","",3,[[["nodeid",3]],[["ordering",4],["option",4]]]],[11,"lt","","",3,[[["nodeid",3]]]],[11,"le","","",3,[[["nodeid",3]]]],[11,"gt","","",3,[[["nodeid",3]]]],[11,"ge","","",3,[[["nodeid",3]]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"index","","",2,[[["nodeid",3]],["node",3]]],[11,"index_mut","","",2,[[["nodeid",3]],["node",3]]],[11,"hash","","",3,[[]]],[11,"hash","","",1,[[]]]],"p":[[4,"NodeError"],[4,"NodeEdge"],[3,"Arena"],[3,"NodeId"],[3,"Node"],[3,"Ancestors"],[3,"Children"],[3,"Descendants"],[3,"FollowingSiblings"],[3,"PrecedingSiblings"],[3,"ReverseChildren"],[3,"ReverseTraverse"],[3,"Traverse"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);