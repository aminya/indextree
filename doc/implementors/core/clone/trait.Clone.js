(function() {var implementors = {};
implementors["indextree"] = [{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Arena.html\" title=\"struct indextree::Arena\">Arena</a>&lt;T&gt;","synthetic":false,"types":["indextree::arena::Arena"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"indextree/enum.NodeError.html\" title=\"enum indextree::NodeError\">NodeError</a>","synthetic":false,"types":["indextree::error::NodeError"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.NodeId.html\" title=\"struct indextree::NodeId\">NodeId</a>","synthetic":false,"types":["indextree::id::NodeId"]},{"text":"impl&lt;T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Node.html\" title=\"struct indextree::Node\">Node</a>&lt;T&gt;","synthetic":false,"types":["indextree::node::Node"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Ancestors.html\" title=\"struct indextree::Ancestors\">Ancestors</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::Ancestors"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.PrecedingSiblings.html\" title=\"struct indextree::PrecedingSiblings\">PrecedingSiblings</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::PrecedingSiblings"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.FollowingSiblings.html\" title=\"struct indextree::FollowingSiblings\">FollowingSiblings</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::FollowingSiblings"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Children.html\" title=\"struct indextree::Children\">Children</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::Children"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.ReverseChildren.html\" title=\"struct indextree::ReverseChildren\">ReverseChildren</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::ReverseChildren"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Descendants.html\" title=\"struct indextree::Descendants\">Descendants</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::Descendants"]},{"text":"impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"enum\" href=\"indextree/enum.NodeEdge.html\" title=\"enum indextree::NodeEdge\">NodeEdge</a>","synthetic":false,"types":["indextree::traverse::NodeEdge"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.Traverse.html\" title=\"struct indextree::Traverse\">Traverse</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::Traverse"]},{"text":"impl&lt;'a, T:&nbsp;<a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"indextree/struct.ReverseTraverse.html\" title=\"struct indextree::ReverseTraverse\">ReverseTraverse</a>&lt;'a, T&gt;","synthetic":false,"types":["indextree::traverse::ReverseTraverse"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()